// DON'T TOUCH THE BUILDSCRIPT[] BLOCK
// its special, and it is only there to make ForgeGradle work correctly.

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge" // adds the forge dependency
apply plugin: 'maven' // for uploading to a maven repo

ext.configFile = file "build.properties"
configFile.withReader {
    // Load config. It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.mod_version
group = "com.mod-buildcraft-compat"
archivesBaseName = "buildcraft-compat" // the name that all artifacts will use as a base. artifacts names follow this pattern: [baseName]-[appendix]-[version]-[classifier].[extension]

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { name='JEI'; url='http://dvs1.progwml6.com/files/maven' }
    maven { name='build craft'; url='https://www.mod-buildcraft.com/maven' }

    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
}

dependencies {
    // deobfCompile "mezz.jei:jei_1.8.9:2.28.9.176" // Versions from http://minecraft.curseforge.com/projects/just-enough-items-jei/files
    // JEI Stuff
    deobfCompile "mezz.jei:jei_${config.mc_version}:${config.jei_version}:api"
    runtime "mezz.jei:jei_${config.mc_version}:${config.jei_version}"

    // BuildCraft Stuff
    compileOnly "com.mod-buildcraft:buildcraft-api:${config.mod_version}"
    compileOnly "com.mod-buildcraft:buildcraft-lib:${config.mod_version}"
    runtime "com.mod-buildcraft:buildcraft:${config.mod_version}"

    // WAILA Stuff
    compile "mcp.mobius.waila:Waila:${config.waila_version}"
}

minecraft {
    version = config.mc_version + "-" + config.forge_version
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = config.mappings_version
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // replacing stuff in the source
    replace '@VERSION@', project.version
    replace '@MC_VERSION@', version

    useDepAts = true
}

// configure  the source folders
sourceSets {
    main {
        java {
            srcDir "common"
        }
        resources {
            srcDir "resources"
        }
    }
//    bc_core {
//        java {
//            srcDir "BuildCraft/common"
//        }
//        resources {
//            srcDir "BuildCraft/buildcraft_resources"
//            srcDir "BuildCraft/BuildCraft-Localization"
//        }
//    }
//    bc_api {
//        java {
//            srcDir "BuildCraft/BuildCraftAPI/api"
//        }
//    }
//    api {
//        java {
//            srcDir "api"
//        }
//    }
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        // ${version}   and    ${mcversion}    are the exact strings being replaced
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, that's not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

